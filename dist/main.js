var a=require("@actions/core"),e=require("@actions/exec"),w=require("@actions/io"),d=require("@actions/tool-cache"),c=require("path"),h=".build-luarocks",k=".lua",f=".luarocks";async function P(){let i=a.getInput("luaRocksVersion",{required:!0}),s=c.join(process.env.RUNNER_TEMP,h,`luarocks-${i}`),l=c.join(process.cwd(),f),p=await d.downloadTool(`https://luarocks.org/releases/luarocks-${i}.tar.gz`);await w.mkdirP(s),await d.extractTar(p,c.join(process.env.RUNNER_TEMP,h));let r=[];if(a.getInput("withLuaPath"))r.push(`--with-lua="${a.getInput("withLuaPath")}"`);else{let t=c.join(process.cwd(),k);r.push(`--with-lua="${t}"`)}r.push(`--prefix="${l}"`),await e.exec(`./configure ${r.join(" ")}`,void 0,{cwd:s}),await e.exec("make",void 0,{cwd:s}),i.match(/^2\./)&&await e.exec("make build",void 0,{cwd:s}),await e.exec("make install",void 0,{cwd:s});let u="";await e.exec(`${c.join(l,"bin","luarocks")} path --lr-bin`,void 0,{listeners:{stdout:t=>{u+=t.toString()}}}),u!=""&&a.addPath(u.trim());let n="";await e.exec("luarocks path --lr-path",void 0,{listeners:{stdout:t=>{n+=t.toString()}}}),n=n.trim();let o="";await e.exec("luarocks path --lr-cpath",void 0,{listeners:{stdout:t=>{o+=t.toString()}}}),o=o.trim(),n!=""&&a.exportVariable("LUA_PATH",";;"+n),o!=""&&a.exportVariable("LUA_CPATH",";;"+o)}P().catch(i=>{a.setFailed(`Failed to install LuaRocks: ${i}`)});
